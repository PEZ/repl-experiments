(ns main.example.some-data)

(def words
  ["language" "stream" "mechanism" "features" "mutable" "reified" "Hosted" "Clojure" "that" "and" "Clojure" "platform" "of" "still" "and" "system" "the" "a" "You" "stands" "Java" "a" "has" "yet" "can" "of" "Features" "but" "be" "vs" "be" "several" "thus" "implementation" "great" "approach" "and" "remains" "Clojure" "allows" "in" "Lisp" "does" "Lisp" "family" "bytecode" "etc" "language" "be" "a" "to" "polymorphism" "to" "grow" "state" "from" "to" "etc" "other" "Runtime" "are" "Polymorphism" "of" "dynamic" "multi-threaded" "the" "is" "but" "bugs" "practical" "and" "notation" "the" "the" "tool" "in" "more" "Clojure" "Development" "provides" "state" "of" "Concurrent" "in" "looping" "easier" "form" "a" "interact" "between" "change" "have" "Clojure" "it" "of" "objects" "supports" "apart" "languages" "programming" "provides" "system" "Almost" "runtime" "simplifies" "side-effect" "coherent" "sets" "library" "languages" "datatypes" "polymorphism" "Because" "together" "simple" "Java" "definition" "it" "on" "and" "are" "Systems" "are" "structures" "class" "as" "readily" "the" "Clojure" "change" "shared" "of" "Clojure" "Programming" "and" "data" "is" "first" "sharing" "fixing" "in" "simple" "when" "functional" "to" "Functional" "are" "Additionally" "compromises" "lists" "of" "useful" "functions" "instead" "immutable" "Clojure" "iteration" "Programming" "with" "having" "is" "utilize" "features" "are" "offering" "and" "type" "JVM" "Clojure’s" "consumer" "it" "mechanisms" "using" "the" "and" "as" "Dynamic" "can" "that" "while" "JVM" "Clojure" "for" "member" "the" "hosted" "the" "extend" "compiled" "set" "consistent" "environment" "core" "code-as-data" "features" "is" "being" "Clojure’s" "powerful" "conflicts" "Clojure" "based" "ways" "tools" "Lisp's" "more" "robust" "abstraction" "made" "Lisp" "functions" "to" "interfaces" "first-class" "the" "and" "threads" "language" "an" "adding" "is" "locks" "structure" "add" "can" "emphasizes" "dynamic" "it" "programs" "protocols" "that" "as" "impure" "Clojure" "and" "offers" "host" "they" "so" "Java" "ensure" "LISP" "facilities" "macro" "for" "to" "GC" "developers" "Clojure" "threads" "the" "your" "the" "unbroken" "avoid" "provides" "features" "into" "set" "mechanisms" "are" "constructs" "manually" "are" "with" "and" "to" "avoid" "calls" "powerful" "with" "JVM" "data" "that" "can" "all" "program" "a" "runtime" "to" "for" "classes" "of" "changed" "the" "alleviating" "behind" "to" "data" "All" "recursive" "philosophy" "of" "a" "maps" "Many" "flexible" "are" "vectors" "dot-target-member" "examined" "loaded" "you" "its" "testing" "that" "a" "designed" "no"])

(comment
  (->> words
       (mapv
        #(clojure.string/replace % #"[,.]" ""))))